{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","del","edit","check","inputFalseOrTrue","finish","className","type","checked","onChange","id","size","value","name","e","target","date","onClick","toString","Local_STORAGE_KEY","App","useState","todos","setTodos","TodoName","useRef","deleteTodo","newTodos","filter","editTodo","map","checkTodo","find","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","ref","placeholder","element","Name","current","Date","y","getFullYear","m","getMonth","dateNow","getDate","getHours","getMinutes","getSeconds","Id","now","prevTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.301115c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Todo.css'\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nexport default function Todo({todo, del, edit, check}) {\r\n\r\n    let inputFalseOrTrue = todo.finish\r\n    function todoClick(name, id)\r\n    {\r\n        edit(name, id)\r\n    }\r\n\r\n    function todoCheked()\r\n    {\r\n        check(todo.id)\r\n    }\r\n\r\n    function delTodo()\r\n    {\r\n        del(todo.id)\r\n    }\r\n\r\n    return (\r\n            <div key={todo.toString()} className=\"todo\">\r\n                <div className=\"todo-check\">\r\n                    <input type=\"checkbox\" checked={todo.finish} onChange={todoCheked}/>\r\n                </div>\r\n                <div className=\"todo-content\">\r\n                    <div>\r\n                        <input size=\"13\" type=\"text\" id={\"inputText:\"+todo.id} className={\"inputClass\"+inputFalseOrTrue} value={todo.name} onChange={e => todoClick(e.target.value, todo.id)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"lblDate\">{todo.date}</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"todo-delete\">\r\n                    <button onClick={delTodo}><BsFillTrashFill/></button>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n","/*\nreste a faire edit \ncheck pour renomer class label pour le barrer\ndesign\n*/\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Todo from './Todo'\nimport './App.css'\nimport { AiOutlinePlus } from 'react-icons/ai';\n\nconst Local_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\nconst [todos, setTodos] = useState([])\nconst TodoName = useRef();\n\n\n//lecture des informations\nuseEffect(() => {\n  const storedTodos = JSON.parse(localStorage.getItem(Local_STORAGE_KEY))\n  setTodos(storedTodos)\n}, [])\n\n//enregistrement des informations\nuseEffect(() => {\n  localStorage.setItem(Local_STORAGE_KEY, JSON.stringify(todos))\n}, [todos])\n\n//supprimer un to-do\nfunction deleteTodo(id)\n{\n  const newTodos = todos.filter(todo => todo.id !== id)\n  setTodos(newTodos)\n}\n\n//edit un to-do\nfunction editTodo(name, id)\n{\n  const newTodos = [...todos]\n  todos.map(todo => {\n    if(todo.id === id)\n    {\n      todo.name = name\n    }\n  })\n    setTodos(newTodos)\n}\n\nfunction checkTodo(id) {\n  const newTodos = [...todos]\n  const todo = newTodos.find(todo => todo.id === id)\n  todo.finish = !todo.finish\n  setTodos(newTodos)\n\n}\n\n//ajouter un to-do\nfunction addTodo(element)\n{\nconst Name = TodoName.current.value\n\n if (Name !== '')\n {\n   //recuperation de la date\n  let date = new Date()\n  let y = date.getFullYear()\n  let m = date.getMonth()\n  let d = date.getDate()\n  \n  let h = date.getHours();\n  let min = date.getMinutes()\n  let sec = date.getSeconds()\n  let dateNow = d + \"/\" + m + \"/\" + y + \" - \" + h + \":\" + min + \":\" + sec;\n  \n  const Id = Date.now()\n  \n  setTodos(prevTodos =>{\n  return [...prevTodos, {id: Id, name : Name, date : dateNow, finish: false}]\n  })\n }\n\n TodoName.current.value = null\n\n}\n\n  return (\n    <>\n    <div className=\"site\">\n      <div className=\"container\">\n          <h1>To-Do List</h1>\n        <div className=\"todo_List\">\n          <div className=\"form\">\n            <input className=\"inputValueToDo\" type=\"text\" ref={TodoName} placeholder=\"ex : sport\"/>\n            <button className=\"btnAdd\" onClick={addTodo}><AiOutlinePlus /></button>\n          </div>\n          <div className=\"list\">\n            {todos.map( todo => {\n                      return <Todo todo={todo} del={deleteTodo} edit={editTodo} check={checkTodo} />\n                  })\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}